local UILibrary = {}

-- Services
local UserInputService = game:GetService("UserInputService")

-- UI Library Initialization
function UILibrary:CreateWindow(windowTitle)
    -- Main Window
    local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local Title = Instance.new("TextLabel")

    ScreenGui.Name = "UILibrary"
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    Frame.Name = "MainFrame"
    Frame.Parent = ScreenGui
    Frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    Frame.Size = UDim2.new(0.3, 0, 0.4, 0)
    Frame.Position = UDim2.new(0.35, 0, 0.3, 0)

    Title.Name = "Title"
    Title.Parent = Frame
    Title.BackgroundTransparency = 1
    Title.Size = UDim2.new(1, 0, 0.1, 0)
    Title.Font = Enum.Font.SourceSans
    Title.Text = windowTitle or "UI Library"
    Title.TextColor3 = Color3.new(1, 1, 1)
    Title.TextScaled = true

    local TabsFrame = Instance.new("Frame")
    TabsFrame.Name = "TabsFrame"
    TabsFrame.Parent = Frame
    TabsFrame.BackgroundColor3 = Color3.new(0.15, 0.15, 0.15)
    TabsFrame.Size = UDim2.new(1, 0, 0.1, 0)
    TabsFrame.Position = UDim2.new(0, 0, 0.1, 0)

    local TabButtons = Instance.new("Frame")
    TabButtons.Name = "TabButtons"
    TabButtons.Parent = TabsFrame
    TabButtons.Size = UDim2.new(1, -10, 1, -10)
    TabButtons.Position = UDim2.new(0, 5, 0, 5)

    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Parent = Frame
    TabContainer.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
    TabContainer.Size = UDim2.new(1, -10, 0.8, -10)
    TabContainer.Position = UDim2.new(0, 5, 0.2, 5)

    return {
        Frame = Frame,
        TabsFrame = TabsFrame,
        TabButtons = TabButtons,
        TabContainer = TabContainer
    }
end

function UILibrary:CreateTab(window, tabName)
    local TabButton = Instance.new("TextButton")
    TabButton.Name = tabName
    TabButton.Parent = window.TabButtons
    TabButton.Size = UDim2.new(0.3, -5, 1, 0)
    TabButton.Text = tabName
    TabButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.3)
    TabButton.TextColor3 = Color3.new(1, 1, 1)
    TabButton.TextScaled = true

    local TabContent = Instance.new("ScrollingFrame")
    TabContent.Name = tabName .. "Content"
    TabContent.Parent = window.TabContainer
    TabContent.Size = UDim2.new(1, 0, 1, 0)
    TabContent.BackgroundTransparency = 1
    TabContent.Visible = false

    TabButton.MouseButton1Click:Connect(function()
        for _, v in ipairs(window.TabContainer:GetChildren()) do
            if v:IsA("ScrollingFrame") then
                v.Visible = false
            end
        end
        TabContent.Visible = true
    end)

    return TabContent
end

function UILibrary:CreateButton(tab, buttonText, callback)
    local Button = Instance.new("TextButton")
    Button.Parent = tab
    Button.Size = UDim2.new(1, -10, 0, 40)
    Button.Position = UDim2.new(0, 5, 0, 5)
    Button.Text = buttonText
    Button.BackgroundColor3 = Color3.new(0.2, 0.2, 0.3)
    Button.TextColor3 = Color3.new(1, 1, 1)
    Button.TextScaled = true

    Button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)

    return Button
end

function UILibrary:CreateToggle(tab, toggleText, callback)
    local Toggle = Instance.new("Frame")
    Toggle.Size = UDim2.new(1, -10, 0, 40)
    Toggle.Position = UDim2.new(0, 5, 0, 50)
    Toggle.BackgroundColor3 = Color3.new(0.2, 0.2, 0.3)
    Toggle.Parent = tab

    local Label = Instance.new("TextLabel")
    Label.Parent = Toggle
    Label.Size = UDim2.new(0.7, -5, 1, 0)
    Label.Position = UDim2.new(0, 5, 0, 0)
    Label.Text = toggleText
    Label.BackgroundTransparency = 1
    Label.TextColor3 = Color3.new(1, 1, 1)
    Label.TextScaled = true

    local Switch = Instance.new("TextButton")
    Switch.Parent = Toggle
    Switch.Size = UDim2.new(0.2, 0, 1, 0)
    Switch.Position = UDim2.new(0.8, 5, 0, 0)
    Switch.Text = "Off"
    Switch.BackgroundColor3 = Color3.new(0.4, 0.2, 0.2)
    Switch.TextColor3 = Color3.new(1, 1, 1)
    Switch.TextScaled = true

    local toggled = false
    Switch.MouseButton1Click:Connect(function()
        toggled = not toggled
        Switch.Text = toggled and "On" or "Off"
        Switch.BackgroundColor3 = toggled and Color3.new(0.2, 0.4, 0.2) or Color3.new(0.4, 0.2, 0.2)
        if callback then
            callback(toggled)
        end
    end)

    return Toggle
end

function UILibrary:CreateKeybind(tab, keybindText, key, callback)
    local Keybind = Instance.new("TextButton")
    Keybind.Parent = tab
    Keybind.Size = UDim2.new(1, -10, 0, 40)
    Keybind.Position = UDim2.new(0, 5, 0, 95)
    Keybind.Text = keybindText .. " [" .. key.Name .. "]"
    Keybind.BackgroundColor3 = Color3.new(0.2, 0.2, 0.3)
    Keybind.TextColor3 = Color3.new(1, 1, 1)
    Keybind.TextScaled = true

    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == key then
            if callback then
                callback()
            end
        end
    end)

    return Keybind
end

function UILibrary:Notify(notificationText, duration)
    local ScreenGui = game.Players.LocalPlayer.PlayerGui:FindFirstChild("UILibrary")
    local Notification = Instance.new("TextLabel")
    Notification.Parent = ScreenGui
    Notification.Text = notificationText
    Notification.Size = UDim2.new(0.2, 0, 0.05, 0)
    Notification.Position = UDim2.new(0.4, 0, 0.9, 0)
    Notification.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    Notification.TextColor3 = Color3.new(1, 1, 1)
    Notification.TextScaled = true

    task.delay(duration or 2, function()
        Notification:Destroy()
    end)
end

return UILibrary
